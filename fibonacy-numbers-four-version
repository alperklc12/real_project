#   1, 2, 3, 4, 5, 6,  7,   8,  9,  10, 11  index
#   0, 1, 1, 2, 3, 5,  8,  13,  21, 34, 55  fib_num


def fib_func1(n: int):
    if n == 2:
        return 1
    elif n == 1:
        return 0
    else:
        return fib_func1(n - 1) + fib_func1(n - 2)


def fib_func2(n: int):
    return _fib_helper(n, {1: 0, 2: 1})


def _fib_helper(n: int, memoize: dict):
    if n in memoize:
        return memoize[n]
    else:
        memoize[n] = _fib_helper(n-1, memoize) + _fib_helper(n - 2, memoize)
        return memoize[n]


def fib_func3(n: int):
    last_two = [0, 1]
    count = 3

    while count <= n:
        fib_num = last_two[0] + last_two[1]
        last_two[0] = last_two[1]
        last_two[1] = fib_num
        count += 1

    return last_two[1] if n > 1 else last_two[0]


def fib_func4(n: int):
    x = 0
    y = 1
    fib_num = 0

    for i in range(2, n):
        fib_num = x + y
        x, y = y, fib_num

    return fib_num
